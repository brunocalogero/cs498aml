setwd("~/Documents/Classes/aml/assignment2/aml-hw2")
setwd("~/Desktop/cs498aml/hw4/7.11")
source('~/Desktop/cs498aml/hw4/7.11/q3.R')
install.packages("faraway")
source('~/Desktop/cs498aml/hw4/7.11/q3.R')
install.packages("readr")
source('~/Desktop/cs498aml/hw4/7.11/q3.R')
setwd("~/Desktop/cs498aml/hw4/7.11")
source('~/Desktop/cs498aml/hw4/7.11/q3.R')
source('~/Desktop/cs498aml/hw4/7.11/q3.R')
rm(list=ls())
library(caret)
library(data.table)
library(klaR)
library(lattice)
library(faraway)
library(readr)
raw_data <- read_csv('abalone.data')
raw_data <- read_csv('abalone.data', headers=FALSE)
raw_data <- read_csv('abalone.data', header=FALSE)
raw_data <- read_csv('abalone.csv')
read.csv('abalone.csv')
raw_data <- read.csv('abalone.csv')
raw_data <- read_csv('abalone.csv')
rm(list=ls())
library(caret)
library(data.table)
library(klaR)
library(lattice)
library(faraway)
library(readr)
raw_data <- read_csv('abalone.csv')
data_no_gender <- raw_data[,-c(1)]
rm(list=ls())
library(caret)
library(data.table)
library(klaR)
library(lattice)
library(faraway)
library(readr)
raw_data <- read_csv('abalone.csv')
cols(raw_data)
colnames(raw_data)
data_no_gender <- raw_data[,-c(1)]
colnames(data_no_gender)
??lm
help(lm)
source('~/Desktop/cs498aml/hw4/7.11/q3.R')
xyplot(resid(model2) ~ fitted(model2),
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residual Diagnostic Plot",
panel = function(x, y, ...)
{
panel.grid(h = -1, v = -1)
panel.abline(h = 0)
panel.xyplot(x, y, ...)
}
)
xyplot(resid(model1) ~ fitted(model1),
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residual Diagnostic Plot",
panel = function(x, y, ...)
{
panel.grid(h = -1, v = -1)
panel.abline(h = 0)
panel.xyplot(x, y, ...)
}
)
options(scipen=1, digits=4, width=80)
library(faraway)
library(readr)
abalone.lm_gender_log <- lm(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight, data = abalone.with_gender)
# preparing data
abalone <- read_csv("./q3.csv")
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
abalone.with_gender <- read_csv("./q3.csv")
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
abalone.lm_gender <- lm(age ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight, data = abalone.with_gender)
plot(abalone.lm_gender$fitted,
abalone.lm_gender$residuals,
main="Residuls vs Fitted",
sub="data with gender",
xlab="Fitted values",
ylab="Residuals")
abalone.with_gender <- read_csv("./q3.csv")
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
abalone.lm_gender <- lm(age ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
plot(abalone.lm_gender$fitted,
abalone.lm_gender$residuals,
main="Residuls vs Fitted",
sub="data with gender",
xlab="Fitted values",
ylab="Residuals")
abalone.lm_log <- lm(log(age) ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight, data = abalone)
plot(abalone.lm_log$fitted,
abalone.lm_log$residuals,
main="Residuls vs Fitted",
sub="log scale, no gender",
xlab="Fitted values",
ylab="Residuals")
abalone.lm_log <- lm(log(age) ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)
plot(abalone.lm_log$fitted,
abalone.lm_log$residuals,
main="Residuls vs Fitted",
sub="log scale, no gender",
xlab="Fitted values",
ylab="Residuals")
abalone.lm_gender_log <- lm(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight, data = abalone.with_gender)
plot(abalone.lm_gender_log$fitted,
abalone.lm_gender_log$residuals,
main="Residuls vs Fitted",
sub="log scale, with gender",
xlab="Fitted values",
ylab="Residuals")
abalone.lm_gender_log <- lm(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
plot(abalone.lm_gender_log$fitted,
abalone.lm_gender_log$residuals,
main="Residuls vs Fitted",
sub="log scale, with gender",
xlab="Fitted values",
ylab="Residuals")
abalone.with_gender <- read_csv("./q3.csv")
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
abalone.lm_gender <- lm(age ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
plot(abalone.lm_gender$fitted,
abalone.lm_gender$residuals,
main="Residuls vs Fitted",
sub="data with gender",
xlab="Fitted values",
ylab="Residuals")
options(scipen=1, digits=4, width=80)
library(faraway)
library(readr)
# preparing data
brunhild <- read_csv("./q1.csv")
# Making log-log transformed model
brunhild.lm_log = lm(log(Sulfate) ~ 1 + log(Hours), data=brunhild)
plot(log(brunhild$Hours),
log(brunhild$Sulfate),
main="Regression and points",
sub="log log scale",
xlab="Predictors",
ylab="Results")
abline(brunhild.lm_log, col="red")
# Making untransforned model
brunhild.lm = lm(Sulfate ~ 1 + Hours, data=brunhild)
plot(brunhild$Hours,
brunhild$Sulfate,
main="Regression and points",
sub="original data",
xlab="Predictors",
ylab="Results")
abline(brunhild.lm, col="red")
# Comparing residuaks of the two models
plot(brunhild.lm_log$fitted,
brunhild.lm_log$residuals,
main="Residuals vs Fitted",
sub="log log scale",
xlab="Fitted values",
ylab="Residuals")
plot(brunhild.lm$fitted,
brunhild.lm$residuals,
main="Residuals vs Fitted",
sub="orignal data",
xlab="Fitted values",
ylab="Residuals")
# preparing data
physical <- read_csv("./q2.csv")
# Making original model
physical.lm <- lm(Mass ~ 1 + Fore + Bicep + Chest + Neck + Shoulder + Waist + Height + Calf + Thigh + Head, data=physical)
physical.scale = c(min(physical.lm$residuals), max(physical.lm$residuals))
summary(physical.lm)
plot(physical.lm$fitted,
physical.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
help(abline)
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
abline(abalone.lm, color="red")
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
abline(abalone.lm, col="red")
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
abline(abalone.lm, col="red")
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
abalone.with_gender <- read_csv("./q3.csv")
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
abalone.lm_gender <- lm(age ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
plot(abalone.lm_gender$fitted,
abalone.lm_gender$residuals,
main="Residuls vs Fitted",
sub="data with gender",
xlab="Fitted values",
ylab="Residuals")
install.packages("glmnet")
