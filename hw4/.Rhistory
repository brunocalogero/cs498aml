setwd("~/Documents/Classes/aml/assignment2/aml-hw2")
library("glmnet", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
help(glment)
??glment
options(scipen=1, digits=4, width=80)
library(faraway)
library(readr)
# preparing data
abalone <- read_csv("./q3.csv")
help(lm)
help(glmnet.formula)
as.formula()
help(as.formula)
help(lm)
data <- read_csv("./q3.csv")
setwd("~/Desktop/cs498aml/hw4/7.11")
data <- read_csv("./q3.csv")
setwd("~/Desktop/cs498aml/hw4")
data <- read_csv("./q3.csv")
data$age
y <- data$age
colnames(data)
x <- model.matrix(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = data)[, -1]
glmnet(x, y)
g <- glmnet(x, y)
plot(g)
cvmfit = cv.glmnet(x, y)
plot(cvmfit)
library(glmnet)
abalone <- read_csv("./q3.csv")
abalone.with_gender <- abalone
x.without_gender <- model.matrix(log(age) ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)[, -1]
abalone.with_gender <- abalone
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
x_with_gender <- model.matrix(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
y <- abalone$age
g.with_gender <- glmnet(x.with_gender, y)
library(glmnet)
abalone <- read_csv("./q3.csv")
abalone.with_gender <- abalone
x.without_gender <- model.matrix(log(age) ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)[, -1]
abalone.with_gender <- abalone
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
x.with_gender <- model.matrix(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
y <- abalone$age
g.with_gender <- glmnet(x.with_gender, y)
g.without_gender <- glmnet(x.without_gender, y)
cvmfit.with_gender = cv.glmnet(x.with_gender, y)
cvmfit.without_gender = cv.glmnet(x.without_gender, y)
plot(g.with_gender)
plot(cvmfit.with_gender)
plot(g.without_gender)
plot(cvmfit.without_gender)
library(glmnet)
abalone <- read_csv("./q3.csv")
abalone.with_gender <- abalone
x.without_gender <- model.matrix(log(age) ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)[, -1]
abalone.with_gender <- abalone
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
x.with_gender <- model.matrix(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
y <- abalone$age
g.with_gender <- glmnet(x.with_gender, y)
g.without_gender <- glmnet(x.without_gender, y)
cvmfit.with_gender = cv.glmnet(x.with_gender, y)
cvmfit.without_gender = cv.glmnet(x.without_gender, y)
plot(g.with_gender, title="Coef with Gender")
plot(cvmfit.with_gender, title="Error with Gender")
plot(g.without_gender, title="Coef without Gender")
plot(cvmfit.without_gender, title="Error without Gender")
help(plot)
library(glmnet)
abalone <- read_csv("./q3.csv")
abalone.with_gender <- abalone
x.without_gender <- model.matrix(log(age) ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)[, -1]
abalone.with_gender <- abalone
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
x.with_gender <- model.matrix(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
y <- abalone$age
g.with_gender <- glmnet(x.with_gender, y)
g.without_gender <- glmnet(x.without_gender, y)
cvmfit.with_gender = cv.glmnet(x.with_gender, y)
cvmfit.without_gender = cv.glmnet(x.without_gender, y)
plot(g.with_gender, main="Coef with Gender")
plot(cvmfit.with_gender, main="Error with Gender")
plot(g.without_gender, main="Coef without Gender")
plot(cvmfit.without_gender, main="Error without Gender")
abalone.lm_gender_log <- lm(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
plot(abalone.lm_gender_log$fitted,
abalone.lm_gender_log$residuals,
main="Residuls vs Fitted",
sub="log scale, with gender",
xlab="Fitted values",
ylab="Residuals")
library(glmnet)
abalone <- read_csv("./q3.csv")
abalone.with_gender <- abalone
x.without_gender <- model.matrix(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)[, -1]
abalone.with_gender <- abalone
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
x.with_gender <- model.matrix(age ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
y <- abalone$age
g.with_gender <- glmnet(x.with_gender, y)
g.without_gender <- glmnet(x.without_gender, y)
cvmfit.with_gender = cv.glmnet(x.with_gender, y)
cvmfit.without_gender = cv.glmnet(x.without_gender, y)
plot(g.with_gender, main="Coef with Gender")
plot(cvmfit.with_gender, main="Error with Gender")
plot(g.without_gender, main="Coef without Gender")
plot(cvmfit.without_gender, main="Error without Gender")
library(glmnet)
abalone <- read_csv("./q3.csv")
abalone.with_gender <- abalone
x.without_gender <- model.matrix(log(age) ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)[, -1]
abalone.with_gender <- abalone
abalone.with_gender[abalone.with_gender["sex"] == "F",]["sex"]<-"-1"
abalone.with_gender[abalone.with_gender["sex"] == "M",]["sex"]<-"1"
abalone.with_gender[abalone.with_gender["sex"] == "I",]["sex"]<-"0"
abalone.with_gender["sex"] = as.numeric(unlist(abalone.with_gender["sex"]))
x.with_gender <- model.matrix(log(age) ~ 1 + sex + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone.with_gender)
y <- abalone$age
g.with_gender <- glmnet(x.with_gender, y)
g.without_gender <- glmnet(x.without_gender, y)
cvmfit.with_gender = cv.glmnet(x.with_gender, y)
cvmfit.without_gender = cv.glmnet(x.without_gender, y)
plot(g.with_gender, main="Coef with Gender")
plot(cvmfit.with_gender, main="Error with Gender")
plot(g.without_gender, main="Coef without Gender")
plot(cvmfit.without_gender, main="Error without Gender")
abalone.lm <- lm(age ~ 1 + length + diameter + height + whole_weight + shuckled_weight + viscera_weight + shell_weight + rings, data = abalone)
plot(abalone.lm$fitted,
abalone.lm$residuals,
main="Residuls vs Fitted",
sub="original data",
xlab="Fitted values",
ylab="Residuals")
